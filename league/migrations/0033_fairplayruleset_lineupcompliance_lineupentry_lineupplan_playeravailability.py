# Generated by Django 3.2.5 on 2025-05-06 00:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('league', '0032_auto_20250403_1926'),
    ]

    operations = [
        migrations.CreateModel(
            name='LineupPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_final', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_lineups', to=settings.AUTH_USER_MODEL)),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lineup_plans', to='league.game')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lineup_plans', to='league.team')),
            ],
        ),
        migrations.CreateModel(
            name='FairPlayRuleSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_group', models.CharField(max_length=10)),
                ('min_innings_per_player', models.IntegerField(default=0)),
                ('max_consecutive_bench_innings', models.IntegerField(default=0)),
                ('min_plate_appearances', models.IntegerField(default=0)),
                ('enforce_plate_appearance', models.BooleanField(default=False)),
                ('enforce_position_rotation', models.BooleanField(default=False)),
                ('max_innings_per_position', models.JSONField(default=dict)),
                ('eh_option_start_date', models.DateField(blank=True, null=True)),
                ('eh_option_end_date', models.DateField(blank=True, null=True)),
                ('no_mandated_fair_play', models.BooleanField(default=False)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fair_play_rules', to='league.league')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('available', 'Available'), ('absent', 'Absent'), ('late', 'Late'), ('injured', 'Injured')], default='available', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_availability', to='league.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='league.player')),
            ],
            options={
                'verbose_name_plural': 'Player Availabilities',
                'unique_together': {('player', 'game')},
            },
        ),
        migrations.CreateModel(
            name='LineupEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batting_order', models.IntegerField()),
                ('positions_by_inning', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lineup_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='league.lineupplan')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lineup_entries', to='league.player')),
            ],
            options={
                'ordering': ['batting_order'],
                'unique_together': {('lineup_plan', 'batting_order'), ('lineup_plan', 'player')},
            },
        ),
        migrations.CreateModel(
            name='LineupCompliance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('innings_played', models.IntegerField(default=0)),
                ('consecutive_bench_innings', models.IntegerField(default=0)),
                ('plate_appearances', models.IntegerField(default=0)),
                ('position_violations', models.JSONField(default=dict)),
                ('is_compliant', models.BooleanField(default=True)),
                ('violation_details', models.TextField(blank=True)),
                ('checked_at', models.DateTimeField(auto_now_add=True)),
                ('lineup_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_checks', to='league.lineupplan')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_checks', to='league.player')),
            ],
            options={
                'unique_together': {('lineup_plan', 'player')},
            },
        ),
    ]
